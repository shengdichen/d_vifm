# handle {{{
# NOTE:
# split a "\n"-separated string to a (powershell-)array by:
#   $env:fx -split "\n"
# OR
#   & $HOME\.local\lib\handle\split.ps1 $env:fx

cmd open ${{
    $paths = $env:fx -split "\n"
    & "$HOME\.local\lib\handle\main.ps1" $paths
}}
cmd h_vim ${{
    $paths = $env:fx -split "\n"
    nvim.exe -O -- $paths
}}
cmd h_mpv &{{
    $paths = $env:fx -split "\n"
    mpv.exe -- $paths
}}
cmd h_default &{{
    Invoke-Item $($env:fx -split "\n")
}}

map l open
map <enter> h_vim
map L push :h_<tab><tab>
# }}}

# goto {{{
map ff ${{
    & "$HOME\.local\lib\goto\goto.ps1" text
}}
map fd ${{
    $path = & "$HOME\.local\lib\goto\goto.ps1" dir

    Write-Host "lf/cd> ['$path']: starting..." -NoNewline
    lf.exe -remote "send $env:id cd '$path'"
    Write-Host "; done!"
}}
map fg ${{
    $path = & "$HOME\.local\lib\goto\goto.ps1" file
    Write-Host "lf/goto> ['$path']: starting..." -NoNewline
    lf.exe -remote "send $env:id select '$path'"
    Write-Host "; done!"
}}
# }}}

set shell pwsh
set shellflag -Command
set shellopts -NoLogo
map S $pwsh -NoLogo

# vim: filetype=conf foldmethod=marker
