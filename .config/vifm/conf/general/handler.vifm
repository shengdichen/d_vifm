" NOTE:
"   1. %f VS "%f"
"   a) %f := one array of unescaped filenames
"   b) "%f" := one space-separated string of escaped filenames

" matched {{{
" dir {{{
" NOTE:
"   1. */ alone will NOT match dirs with leading-dot (e.g., |.git|), we thus
"   prepend a "?" to force matching such dirs
filextype ?*/
    \ handler.sh "mpv" %f,
" }}}

" document {{{
" pdf-related {{{
filextype *.pdf
    \ {zathura}
    \ handler.sh "zathura" %f,
    \ {pdfarranger}
    \ handler.sh "pdfarranger" %f,
    \ {xournal++}
    \ handler.sh "xournalpp" %f,

filetype *.pdf
    \ {as text}
    \ pdftotext -nopgbrk %f - | cat -n | less,

fileviewer *.pdf
    \ pdftotext -nopgbrk %f - | cat -n,

filextype *.ps,*.eps,*.ps.gz,*.djvu
    \ {zathura}
    \ handler.sh "zathura" %f,
" }}}

filextype *.xopp
    \ handler.sh "xournalpp" %f,

filextype *.lyx
    \ {lyx_wayland}
    \ handler.sh "lyx" %f,
    \ {lyx}
    \ WAYLAND_DISPLAY='' handler.sh "lyx" %f,

" "office"-related {{{
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx
    \ handler.sh "libreoffice" %f,

fileviewer *.doc
    \ catdoc %f,
fileviewer *.docx
    \ docx2txt.pl %f -
" }}}
" }}}

" media {{{
" aud {{{
filextype
\ *.flac,*.wav,*.ape,
\*.mp3,*.m4a,*.m4b,
\*.wma,*.ac3,*.og[agx],*.spx,*.opus
    \ handler.sh "mpv" %f,

fileviewer
\ *.flac,*.wav,*.ape,
\*.mp3,*.m4a,*.m4b,
\*.wma,*.ac3,*.og[agx],*.spx,*.opus
    \ handler.sh "info_ffmpeg" %f,
" }}}

" vid {{{
filextype
\ *.mkv,
\*.avi,*.mp4,*.webm,*.ts,*.m[4o]v,*.mpg,*.mpeg,*.vob,*.fl[icv],
\*.wmv,*.dat,*.3gp,*.ogv,*.m2v,*.mts,*.r[am],*.qt,*.divx,*.as[fx]
    \ handler.sh "mpv" %f,

fileviewer
\ *.mkv,
\*.avi,*.mp4,*.webm,*.ts,*.m[4o]v,*.mpg,*.mpeg,*.vob,*.fl[icv],
\*.wmv,*.dat,*.3gp,*.ogv,*.m2v,*.mts,*.r[am],*.qt,*.divx,*.as[fx]
    \ handler.sh "info_ffmpeg" %f,
" }}}

" pic {{{
filextype
\ *.png,*.svg,
\*.jpg,*.jpeg,*.bmp,*webp,*.gif,*.xpm
\*.heif,*.heifs,*.heic,*.heics,*.avci,*.avcs,*.avif
    \ {imv}
    \ nohup imv %f 1>/dev/null 2>&1 &,

fileviewer
\ *.png,*.svg,
\*.jpg,*.jpeg,*.bmp,*webp,*.gif,*.xpm
\*.heif,*.heifs,*.heic,*.heics,*.avci,*.avcs,*.avif
    \ handler.sh "info_image" %f,
" }}}

filetype *.torrent
    \ {info: transmission}
    \ transmission-show %f | nvim -R,
fileviewer *.torrent
    \ transmission-show -D -T %f,
" }}}

" archive {{{
filetype *.tar
    \ {list}
    \ tar -tvf %f | nvim -R,
    \ {unmake}
    \ handler.sh "archive" "unmake" "tar" %f,
fileviewer *.tar
    \ handler.sh "archive" "list" "tar" %f,

" bzip2 {{{
filetype *.tar.bz2,*.tbz2,*tar.bz,*.tbz
    \ {list}
    \ tar --bzip2 -tvf %f | nvim -R,
    \ {unmake}
    \ handler.sh "archive" "unmake" "bzip2" "multi" %f,
fileviewer *.tar.bz2,*.tbz2,*tar.bz,*.tbz
    \ handler.sh "archive" "list" "bzip2" "multi" %f,

filetype *.bz2,*.bz
    \ {unmake}
    \ handler.sh "archive" "unmake" "bzip2" "single" %f,
fileviewer *.bz2,*.bz
    \ handler.sh "archive" "list" "bzip2" "single" %f,
" }}}

" gzip {{{
" man-page
filetype *.[1-8n].gz
    \ man -l %f | nvim -R -c "set filetype=man",
fileviewer *.[1-8n].gz
    \ man -l %f | nl -b a -w 2 -n 'rz' -s '  ',

filetype *.tar.gz,*.tgz,*.tar.Z,*.taz
    \ {list}
    \ tar --gzip -tvf %f | nvim -R,
    \ {unmake}
    \ handler.sh "archive" "unmake" "gzip" "multi" %f,
fileviewer *.tar.gz,*.tgz,*.tar.Z,*.taz
    \ handler.sh "archive" "list" "gzip" "multi" %f,

filetype *.gz,*.z
    \ {unmake}
    \ handler.sh "archive" "unmake" "gzip" "single" %f,
fileviewer *.gz,*.z
    \ handler.sh "archive" "list" "gzip" "single" %f,
" }}}

" xz {{{
filetype *.tar.xz,*.txz,*tar.lz,*.tlz
    \ {list}
    \ tar --xz -tvf %f | nvim -R,
    \ {unmake}
    \ handler.sh "archive" "unmake" "xz" "multi" %f,
fileviewer *.tar.xz,*.txz,*tar.lz,*.tlz
    \ handler.sh "archive" "list" "xz" "multi" %f,

filetype *.xz,*.lzma,*.lz
    \ {unmake}
    \ handler.sh "archive" "unmake" "xz" "single" %f,
fileviewer *.xz,*.lzma,*.lz
    \ handler.sh "archive" "list" "xz" "single" %f,
" }}}

" zstd {{{
filetype *.tar.zst
    \ {list}
    \ tar --zstd -tvf %f | nvim -R,
    \ {unmake}
    \ handler.sh "archive" "unmake" "zstd" "multi" %f,
fileviewer *.tar.zst
    \ handler.sh "archive" "list" "zstd" "multi" %f,

filetype *.zst
    \ {unmake}
    \ handler.sh "archive" "unmake" "zstd" "single" %f,
fileviewer *.zst
    \ handler.sh "archive" "list" "zstd" "single" %f,
" }}}

filetype
\ *.7z,
\*.iso
    \ {list}
    \ handler.sh "archive" "list" "7z-nvim" %f,
    \ {unmake}
    \ handler.sh "archive" "unmake" "7z" %f,
fileviewer
\ *.7z,
\*.iso
    \ handler.sh "archive" "list" "7z" %f,

filetype
\ *.zip,
\*.apk,*.apkg,
\*.[ejw]ar
    \ {list}
    \ unzip -l %f | nvim -R,
    \ {unmake}
    \ handler.sh "archive" "unmake" "zip" %f,
fileviewer
\ *.zip,
\*.apk,*.apkg,
\*.[ejw]ar
    \ handler.sh "archive" "list" "zip" %f,

filetype *.rar
    \ {list}
    \ handler.sh "archive" "list" "unrar-nvim" %f,
    \ {unmake}
    \ handler.sh "archive" "unmake" "unrar" %f,
fileviewer *.rar
    \ handler.sh "archive" "list" "unrar" %f,
" }}}

" dev {{{
filextype
\ *.db,*.db3,*.sqlite,*.sqlite3
    \ nohup sqlitebrowser -- %f 1>/dev/null 2>&1 &,

" signature {{{
filetype *.md5
    \ {verify}
    \ md5sum -c %f %S,

filetype *.sha1
    \ {verify}
    \ sha1sum -c %f %S,

filetype *.sha256
    \ {verify}
    \ sha256sum -c %f %S,

filetype *.sha512
    \ {verify}
    \ sha512sum -c %f %S,

filetype *.asc
    \ {verify}
    \ !!gpg --verify %f,

filetype *.mfa.gpg
    \ {pass-mfa: copy}
    \ pass otp -c $(echo %f:p | sed "s/^.*\.password-store\/\(.*\).gpg$/\1/") 1>/dev/null,

filetype *.gpg
    \ {pass: edit}
    \ pass edit $(echo %f:p | sed "s/^.*\.password-store\/\(.*\).gpg$/\1/") 2>/dev/null,
    \ {pass: copy}
    \ pass -c $(echo %f:p | sed "s/^.*\.password-store\/\(.*\).gpg$/\1/") 1>/dev/null,
" }}}

" web {{{
filetype *.html,*.htm
    \ {edit}
    \ nvim %f,
    \ {view}
    \ w3m -T text/html -dump %f | nvim -R,

filextype *.html,*.htm
    \ {fd}
    \ firefox-developer-edition --private-window %f 1>/dev/null 2>&1 &,
    \ {ff}
    \ firefox --private-window %f 1>/dev/null 2>&1 &,
    \ {chromium}
    \ chromium --incognito --new-window %f 1>/dev/null 2>&1 &,

fileviewer *.html,*.htm
    \ w3m -T text/html -dump %f | nl -b a -w 2 -n 'rz' -s '  ',
" }}}

filetype *.o
    \ nm %f | nvim -R,
fileviewer *.o
    \ nm %f | nl -b a -w 2 -n 'rz' -s '  ',
" }}}
" }}}

" default {{{
" NOTE:
"   1.  must be placed AFTER all matching-based handlers above
"   2.  use |?*| and |*| to match all

filetype ?*,*
    \ {nvim}
    \ handler.sh "nvim" "open" %f,
    \ {diff}
    \ handler.sh "nvim" "diff" %f,
    \ {nvim.tmux}
    \ tmux.sh "file" "open" "%f",
    \ {diff.tmux}
    \ tmux.sh "file" "diff" "%f",
    \ {vi}
    \ vi %f,

" notably used for bulk-renaming
set vicmd=vi
set vixcmd=nvim

" files (NOT folders)
fileviewer ?*[^/]
    \ handler.sh "preview" "file" %f,

" folders (NOT files)
fileviewer ?*/
    \ handler.sh "preview" "dir" %f,

filetype ?*,*
    \ {placeholder}
    \ echo 1,
    \ handler.sh "archive" "make" "tar" %f,
    \ {placeholder}
    \ echo 2,
    \ handler.sh "archive" "make" "multi" "bzip2" %f,
    \ handler.sh "archive" "make" "multi" "gzip" %f,
    \ handler.sh "archive" "make" "multi" "xz" %f,
    \ handler.sh "archive" "make" "multi" "zstd" %f,
    \ handler.sh "archive" "make" "multi" "7z" %f,
    \ handler.sh "archive" "make" "multi" "zip" %f,
    \ {placeholder}
    \ echo 3,
    \ handler.sh "archive" "make" "single" "bzip2" %f,
    \ handler.sh "archive" "make" "single" "gzip" %f,
    \ handler.sh "archive" "make" "single" "xz" %f,
    \ handler.sh "archive" "make" "single" "zstd" %f,
    \ handler.sh "archive" "make" "single" "7z" %f,
    \ handler.sh "archive" "make" "single" "zip" %f,
" }}}

filetype *.tmux
    \ {source}
    \ tmux source-file %f,

" vim: filetype=vifm foldmethod=marker
